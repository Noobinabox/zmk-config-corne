/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tap_shift_caps: tap_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LS(CAPS)>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        alt_tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <38 13>;
            layers = <0>;
            timeout-ms = <500>;
        };

        toggle_default_layer {
            bindings = <&to 0>;
            key-positions = <37 13>;
        };

        toggle_lower_layer {
            bindings = <&to 1>;
            key-positions = <14 37>;
        };

        toggle_raised_layer {
            bindings = <&to 2>;
            key-positions = <15 37>;
        };

        toggle_tri_layer {
            bindings = <&to 3>;
            key-positions = <16 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E  &kp R       &kp T         &kp Y      &kp U      &kp I         &kp O    &kp P      &none
&none  &kp A  &kp S  &kp D  &kp F       &kp G         &kp H      &kp J      &kp K         &kp L    &kp SEMI   &none
&none  &kp Z  &kp X  &kp C  &kp V       &kp B         &kp N      &kp M      &kp COMMA     &kp DOT  &kp SLASH  &none
                     &sl 1  &kp LSHIFT  &kp RETURN    &kp SPACE  &kp LCTRL  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1  &kp N2  &kp N3  &none   &none     &none     &none     &none   &none      &none          &none
&none  &kp N4  &kp N5  &kp N6  &none   &none     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp BACKSPACE  &none
&none  &kp N7  &kp N8  &kp N9  &kp N0  &trans    &trans    &trans    &trans  &trans     &trans         &none
                       &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL  &kp AT            &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none  &kp ESC   &kp SINGLE_QUOTE  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &none
&none  &kp TAB   &trans            &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &none
                                   &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F4  &kp F5  &kp F6  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F7  &kp F8  &kp F9  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };
};
