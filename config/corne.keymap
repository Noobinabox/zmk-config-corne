/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tap_single_semicolon: tap_single_semicolon {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SINGLE_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp SINGLE_QUOTE>;

            tapping-term-ms = <200>;
        };

        tap_hold_layers: tap_hold_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD_LAYERS";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        alt_tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <38 13>;
            layers = <0 1 3 2>;
            timeout-ms = <500>;
        };

        toggle_default_layer {
            bindings = <&to 0>;
            key-positions = <13 36>;
            layers = <0 2 3 1>;
            timeout-ms = <1000>;
        };

        toggle_lower_layer {
            bindings = <&to 1>;
            key-positions = <14 36>;
            timeout-ms = <1000>;
            layers = <0 2 3 1>;
        };

        toggle_raised_layer {
            bindings = <&to 2>;
            key-positions = <15 36>;
            timeout-ms = <1000>;
            layers = <0 2 3 1>;
        };

        toggle_tri_layer {
            bindings = <&to 3>;
            key-positions = <16 36>;
            timeout-ms = <1000>;
            layers = <0 2 1 3>;
        };

        toggle_rots_layer {
            bindings = <&to 4>;
            key-positions = <36 17>;
            timeout-ms = <1000>;
            layers = <0 1 2 3 4>;
        };
    };

    macros {
        escape_to_layer_zero: escape_to_layer_zero {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &to 0>;
            label = "ESCAPE_TO_LAYER_ZERO";
        };

        jetbrains_format_code: jetbrains_format_code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(L))>;
            label = "JETBRAINS_FORMAT_CODE";
        };

        jetbrains_import_library: jetbrains_import_library {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(ENTER)>;
            label = "JETBRAINS_IMPORT_LIBRARY";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E                 &kp R       &kp T         &kp Y      &kp U      &kp I         &kp O    &kp P                  &none
&none  &kp A  &kp S  &kp D                 &kp F       &kp G         &kp H      &kp J      &kp K         &kp L    &tap_single_semicolon  &none
&none  &kp Z  &kp X  &kp C                 &kp V       &kp B         &kp N      &kp M      &kp COMMA     &kp DOT  &kp SLASH              &none
                     &tap_hold_layers 1 0  &sk LSHIFT  &kp RETURN    &kp SPACE  &kp LCTRL  &kp LEFT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1     &kp N2  &kp N3  &kp N4   &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0         &none
&none  &kp GRAVE  &none   &none   &kp ESC  &none     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp BACKSPACE  &none
&none  &none      &none   &none   &none    &none     &trans    &none     &none   &none      &none          &none
                          &trans  &trans   &trans    &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL               &kp AT   &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp STAR          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none  &escape_to_layer_zero  &kp TAB  &none     &none       &none          &kp MINUS       &none          &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp EQUAL              &none
&none  &none                  &none    &none     &none       &none          &kp UNDERSCORE  &none          &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp BACKSLASH          &none
                                       &trans    &trans      &trans         &trans          &trans         &trans
            >;
        };

        tri_layer {
            bindings = <
&none  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3               &bt BT_SEL 4            &none         &none   &none   &none   &none    &none    &none
&none  &kp F1        &kp F2        &kp F3                     &kp F4                  &kp F5        &kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &none
&none  &none         &none         &jetbrains_import_library  &jetbrains_format_code  &bt BT_CLR    &none   &none   &none   &kp F11  &kp F12  &none
                                   &trans                     &trans                  &trans        &trans  &trans  &trans
            >;
        };

        rots {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &none   &kp KP_NUMBER_7  &kp KP_N8  &kp KP_N9  &none  &none
&none  &trans  &trans  &trans  &trans  &trans    &none   &kp KP_NUMBER_4  &kp KP_N5  &kp KP_N6  &none  &none
&none  &trans  &trans  &trans  &trans  &trans    &none   &kp KP_N1        &kp KP_N2  &kp KP_N3  &none  &none
                       &trans  &trans  &trans    &trans  &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };
};
